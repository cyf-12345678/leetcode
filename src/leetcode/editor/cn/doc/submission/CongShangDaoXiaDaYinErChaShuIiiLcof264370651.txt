
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     * int val;
     * TreeNode left;
     * TreeNode right;
     * TreeNode(int x) { val = x; }
     * }
     */
    class Solution {
        List<List<Integer>> result = new LinkedList<>();

        public List<List<Integer>> levelOrder(TreeNode root) {
            if (root == null) return result;

            Deque<TreeNode> queue = new ArrayDeque<>();
            queue.offer(root);
            boolean flag = false;
            while (!queue.isEmpty()) {
                int count = queue.size();
                LinkedList<Integer> list = new LinkedList<>();
                for (int i = 0; i < count; i++) {
                    TreeNode node = queue.poll();
                    if (flag) {
                        list.addFirst(node.val);
                    } else {
                        list.addLast(node.val);
                    }
                    if (node.left != null) {
                        queue.offer(node.left);
                    }
                    if (node.right != null) {
                        queue.offer(node.right);
                    }
                }
                flag = !flag;
                result.add(list);
            }
            return result;
        }
    }

//runtime:1 ms
//memory:41.8 MB
