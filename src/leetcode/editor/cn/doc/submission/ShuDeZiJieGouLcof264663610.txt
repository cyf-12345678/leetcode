
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     * int val;
     * TreeNode left;
     * TreeNode right;
     * TreeNode(int x) { val = x; }
     * }
     */
    class Solution {
        public boolean isSubStructure(TreeNode A, TreeNode B) {
            if (A == null || B == null) return false;

            if (A.val == B.val && check(A, B)) return true;

            return isSubStructure(A.left, B) || isSubStructure(A.right, B);
        }

        public boolean check(TreeNode A, TreeNode B) {
            if (A == null || B == null) return B == null;

            if (A.val != B.val) return false;

            return check(A.left, B.left) && check(A.right, B.right);
        }
    }

//runtime:0 ms
//memory:44.1 MB
